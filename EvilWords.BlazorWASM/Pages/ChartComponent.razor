@using System.Xml.Serialization
@*<MudChart ChartType="ChartType.Bar" 
          ChartOptions="@ChartOptions"
          ChartSeries="@ChartSeries"
          XAxisLabels="@XAxisLabels"
          Width="100%" 
          Height="300px" 
          

/>*@

<MudChart 
    ChartType="ChartType.Pie"
    ChartOptions="@ChartOptions"
    InputData="InputData"
    InputLabels="InputLabels"
    Width="300px" Height="300px"
          />



@code {
    [Parameter]
    [EditorRequired]
    public RunHistory History { get; set; }

    public const int MaxGuesses = 6;

    public double[] InputData
    {
        get
        {
            return History.Results
                .GroupBy(x => x.Guesses)
                .OrderBy(x => x.Key)
                .Select(x=>x.Count() + 0d )
                .ToArray();
        }
    }

    public string[] InputLabels
    {
        get
        {
            return History.Results
                .GroupBy(x => x.Guesses)
                .OrderBy(x => x.Key)
                .Select(x =>
                {
                    if (x.Key.HasValue) return $"{x.Key} Guesses";
                    return "Failed";
                } )
                .ToArray();
        }
    }


    //public List<ChartSeries> ChartSeries => new()
    //{
    //    new() { Data = @History.Results.Select(x => x.Guesses ?? 0d).ToArray() },
    //    new() { Data = @History.Results.Select(x => x.Guesses.HasValue? 0d : MaxGuesses + 1) .ToArray() },
    //};

    //public string[] XAxisLabels => History.Results.Select(x => x.HiddenWord).ToArray();


    public ChartOptions ChartOptions => new ()
    {
        
        DisableLegend = false,
        ChartPalette = new []{"Red", "Green", "Blue"},
    };

}
